services:
    frankenphp:
        build:
            context: .
        entrypoint: 'php artisan octane:frankenphp --workers=1 --max-requests=1'
        ports:
            - "8000:8000"
        volumes:
            - .:/app
        networks:
            - quran
    queue-worker:
        image: dunglas/frankenphp
        entrypoint: 'php artisan queue:listen'
        volumes:
            - .:/app
        networks:
            - quran
    queue-scheduler:
        image: dunglas/frankenphp
        entrypoint: 'php artisan schedule:work'
        volumes:
            - .:/app
        networks:
            - quran
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'quran-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - quran
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    mongodb:
        image: 'mongodb/mongodb-atlas-local:latest'
        environment:
            - 'MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}'
            - 'MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-}'
        volumes:
            - 'quran-mongodb:/data/db'
        ports:
            - '${FORWARD_MONGODB_PORT:-27017}:27017'
        networks:
            - quran
        healthcheck:
            test:
                - CMD
                - mongosh
                - 'mongodb://localhost:27017/admin'
                - '--eval=db.runCommand({ping:1})'
            retries: 3
            timeout: 5s
        restart: always
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'quran-redis:/data'
        networks:
            - quran
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
        restart: always
    elasticsearch:
        image: 'docker.elastic.co/elasticsearch/elasticsearch:7.10.2'
        environment:
            - 'ES_JAVA_OPTS=-Xms1g -Xmx1g'
        ports:
            - '${FORWARD_ELASTICSEARCH_PORT:-9200}:9200'
        networks:
            - quran
        healthcheck:
            test:
                - CMD-SHELL
                - 'curl -s -XGET http://localhost:${FORWARD_ELASTICSEARCH_PORT:-9200}'
            retries: 3
            timeout: 5s
        restart: always
        volumes:
            - ./docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
networks:
    quran:
        driver: bridge
volumes:
    quran-mysql:
        driver: local
    quran-mongodb:
        driver: local
    quran-redis:
        driver: local
    quran-elasticsearch:
        driver: local
